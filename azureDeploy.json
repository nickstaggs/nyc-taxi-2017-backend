{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerGroupName": {
      "type": "string",
      "defaultValue": "ntm-backend",
      "metadata": {
        "description": "Container Group name."
      }
    },
    "postgresUser": {
      "type": "string",
      "defaultValue": "postgres",
      "metadata": {
        "description": "Postgres Username"
      }
    },
    "postgresPass": {
      "type": "string",
      "metadata": {
        "description": "Postgres Password"
      }
    },
    "imageRegistryLoginServer": {
      "type": "string",
      "metadata": {
        "description": "ACR server"
      }
    },
    "imageRegistryUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for ACR"
      }
    },
    "imageRegistryPassword": {
      "type": "string",
      "metadata": {
        "description": "Password for ACR"
      }
    },
    "storageAccount": {
      "type": "string",
      "defaultValue": "eusprdsans",
      "metadata": {
        "description": "Storage Account name."
      }
    },
    "fileShare": {
      "type": "string",
      "defaultValue": "eus-prd-fs-taxi-db",
      "metadata": {
        "description": "Storage Account name."
      }
    },
    "storageAccountKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Storage Account name."
      }
    }
  },
  "variables": {
    "container1name": "db",
    "container1image": "postgres:latest",
    "container2name": "ntm-server",
    "container2image": "nickstaggs/nyc-taxi-2017-backend:latest"
  },
  "resources": [
    {
      "name": "[parameters('containerGroupName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "containers": [
          {
            "name": "[variables('container1name')]",
            "properties": {
              "image": "[variables('container1image')]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGb": 1.5
                }
              },
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_USER",
                  "value": "[parameters('postgresUser')]"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "[parameters('postgresPass')]"
                }
              ]
            }
          },
          {
            "name": "[variables('container2name')]",
            "properties": {
              "image": "[variables('container2image')]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGb": 1.5
                }
              },
              "ports": [
                {
                  "port": 80
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-files",
                  "mountPath": "/var/lib/postgresql/data",
                  "readOnly": false
                }
              ]
            }
          }
        ],
        "imageRegistryCredentials": [
          {
            "server": "[parameters('imageRegistryLoginServer')]",
            "username": "[parameters('imageRegistryUsername')]",
            "password": "[parameters('imageRegistryPassword')]"
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": "80"
            }
          ]
        },
        "volumes": [
          {
            "name": "db-files",
            "azureFile": {
              "shareName": "[parameters('fileShare')]",
              "storageAccountName": "[parameters('storageAccount')]",
              "storageAccountKey": "[parameters('storageAccountKey')]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "containerIPv4Address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('containerGroupName'))).ipAddress.ip]"
    }
  }
}